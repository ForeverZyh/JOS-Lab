1.
printf.c invokes cputchar(int)
console.c exports cputchar(int)
printf.c passes putch(int,int*) in which cputchar(int) is invoked as a function
pointer to vprintfmt() in printfmt.c

2.
If the output buffer is full, then show it in console. And later clear the 
buffer.

3.
fmt -> "x %d, y %x, z %d\n" (an address where these chars are stored)
ap -> x, y, z (va_list)
vcprintf(fmt, ap) // fmt means format, ap means the arugements list
cons_putc(int c) // c is a char to output
vcprintf // the ap points to 4 x(16 bytes) after

4.
0x00646c72
0x72 -> r
0x6c -> l
0x64 -> d

5.
value in the address after ap pointed to

6.

